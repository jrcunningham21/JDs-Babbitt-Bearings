@{
    ViewBag.Title = "Auto Complete";
}

<h2>Auto Complete</h2>

<div class="demo-section k-content">
    <select id="multiselect" style="width:100%;" />        
</div>


<script type="text/x-kendo-template" id="results-template">
    <button id="add-new-part" style="width:200px;">
        Add New Part!
    </button>
    # for (var i = 0; i < data.length; i++) { #
    <div class="line-item" data-autocompleteid="#: data[i].AutoCompleteID #" style="display:flexbox;" onclick="PartClicked(this)">
        <span style="width:200px;">
            #: data[i].Value #
            <button class="delete-button" type="button" data-autocompleteid="#: data[i].AutoCompleteID #" style="justify-content:flex-end;">[X]</button>
        </span>
    </div>
    # } #
</script>

<style>
    .line-item {
        width: 200px;
        height: 35px;
        background-color: #dadada;
        display: block;
        border: 1px solid #aaa;
        margin-top: -1px;
        padding: 5px;
    }

        .line-item button.delete-button {
            display: block;
            float: right;
            padding: 0;
            border: none;
        }

    .dropdown-header {
        border-width: 0 0 1px 0;
        text-transform: uppercase;
    }

        .dropdown-header > span {
            display: inline-block;
            padding: 10px;
        }

            .dropdown-header > span:first-child {
                width: 50px;
            }

    .selected-value {
        display: inline-block;
        vertical-align: middle;
        width: 18px;
        height: 18px;
        background-size: 100%;
        margin-right: 5px;
        border-radius: 50%;
    }

    #customers-list .k-item {
        line-height: 1em;
        min-width: 300px;
    }

    /* Material Theme padding adjustment*/

    .k-material #customers-list .k-item,
    .k-material #customers-list .k-item.k-state-hover,
    .k-materialblack #customers-list .k-item,
    .k-materialblack #customers-list .k-item.k-state-hover {
        padding-left: 5px;
        border-left: 0;
    }

    #customers-list .k-item > span {
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        display: inline-block;
        vertical-align: top;
        margin: 20px 10px 10px 5px;
    }

        #customers-list .k-item > span:first-child {
            -moz-box-shadow: inset 0 0 30px rgba(0,0,0,.3);
            -webkit-box-shadow: inset 0 0 30px rgba(0,0,0,.3);
            box-shadow: inset 0 0 30px rgba(0,0,0,.3);
            margin: 10px;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-size: 100%;
            background-repeat: no-repeat;
        }

    #customers-list h3 {
        font-size: 1.2em;
        font-weight: normal;
        margin: 0 0 1px 0;
        padding: 0;
    }

    #customers-list p {
        margin: 0;
        padding: 0;
        font-size: .8em;
    }
</style>

<script>
    var dataSource = new kendo.data.DataSource({
        transport: {
            read: {
                type: 'GET',
                url: '/EmployeePortal/AutoComplete/GetAutoCompleteValues/',
                dataType: 'json'
            }
        }
    });

    $("#multiselect").kendoMultiSelect({
                        dataTextField: "Value",
                        dataValueField: "AutoCompleteID",
                        headerTemplate: '<button id="add-new-part" onclick="AddNewPart()">Add New Part!</button><button id="use-one-time">Use # One Time</button>',
                        itemTemplate: '<div data-autocompleteid="#: data.AutoCompleteID #" style="display:flexbox;"><span style="width:200px;">#: data.Value #<button class="delete-button" type="button" onclick="DeletePart(#: data.AutoCompleteID #)" data-autocompleteid="#: data.AutoCompleteID #" style="justify-content:flex-end;">[X delete X]</button></span></div>',
                        tagTemplate: '<div class="line-item" data-autocompleteid="#: data.AutoCompleteID #"><span style="width:200px;">#: data.Value #</span></div>',
                        dataSource: dataSource,
                        close: function (e) {
                            var hasFocus = $("#multiselect").data("kendoMultiSelect").input.is(":focus");

                            if (hasFocus)
                                e.preventDefault();                        
                        }
                    });

    function AddNewPart() {
        var value = $("#multiselect").data("kendoMultiSelect").input.val();

        $.ajax({
            type: 'POST',
            url: '/EmployeePortal/AutoComplete/AddNewPart/' + value,
            success: function (data) {     
                RefreshDropDown(data.AutoCompleteId);
            },
            error: function (data) {
                bootbox.alert("Error in AJAX AddNewPart", function () {
                });
            }
        });
    }

    function DeletePart(id) {
        
        $.ajax({
            type: 'POST',
            url: '/EmployeePortal/AutoComplete/DeletePart/' + id,
            success: function (data) {                
                RefreshDropDown();
            },
            error: function (data) {
                bootbox.alert("Error in AJAX DeletePart");
            }
        });
    }

    function RefreshDropDown(AutoCompleteID) {
        var ms = $("#multiselect").data("kendoMultiSelect");        

        $.ajax({
            type: 'GET',
            url: '/EmployeePortal/AutoComplete/GetAutoCompleteValues/',
            success: function (ACdata) {
        
            }
        }).done(function (ACdata) {
            // Gets the AutoCompleteIds for the currently selected items
            var selected = $("#multiselect").data("kendoMultiSelect").value().slice();

            // used to refresh data on the AutoComplete and handle reselecting items
            ms.dataSource.read().then(function () {
                selected.push(AutoCompleteID);
                $("#multiselect").data("kendoMultiSelect").dataSource.filter({});
                $("#multiselect").data("kendoMultiSelect").value(selected);
            });
                        
        }).fail(function () {
            bootbox.alert("Error in AJAX REFRESH GetAutoCompleteValues", function () {

            });
        });
    }
</script>