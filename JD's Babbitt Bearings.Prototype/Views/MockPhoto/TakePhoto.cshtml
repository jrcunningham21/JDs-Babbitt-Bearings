
@{
    ViewBag.Title = "TakePhoto";
}
<style>
    #camera-area{
        border: 5px solid transparent;
        border-radius: 10px;
        padding: 5px;
        margin: 10px;
        width:1000px;
        height:500px;
    }
 
    #video {
      border: 1px solid black;
      box-shadow: 2px 2px 3px black;
      width:1000px;
      height:500px;
    }

    #photo {
      border: 1px solid black;
      box-shadow: 2px 2px 3px black;
      width:1000px;
      height:500px;
    }

    #canvas {
      display:none;
    }

    .camera {
      width: 100%;
      display:inline-block;
    }

    .output {
      width: 340px;
      display:inline-block;
    }

    /*#startbutton {
      display:block;
      position:relative;
      margin-left:auto;
      margin-right:auto;
      bottom:32px;
      background-color: rgba(0, 150, 0, 0.5);
      border: 1px solid rgba(255, 255, 255, 0.7);
      box-shadow: 0px 0px 1px 2px rgba(0, 0, 0, 0.2);
      font-size: 14px;
      font-family: "Lucida Grande", "Arial", sans-serif;
      color: rgba(255, 255, 255, 1.0);
    }*/

    .contentarea {
      font-size: 16px;
      font-family: "Lucida Grande", "Arial", sans-serif;
      width: 760px;
    }


</style>


<div class="container-fluid form-container">

    <!-- Modal -->
    <div class="modal fade" id="confirmPhotoModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content" style="width:1100px; margin-left:-300px">
                <div class="modal-header" style="padding:35px 50px;">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4><span class="glyphicon glyphicon-lock"></span> Confirm Photo</h4>
                </div>
                <div class="modal-body" style="padding:40px 50px;">
                    <form role="form">

                        @*<img src="~/Images/MockPhotos/bearing1.jpg" style="min-width:100%; max-height:100%" />*@

                        <div class="output">
                            <img id="photo" alt="The screen capture will appear in this box.">
                        </div>

                        <div class="form-group">
                            <label>JD's Job #: 3004</label> 
                        </div>
                        <button type="submit" class="btn btn-success btn-block"><span class="glyphicon glyphicon-off"></span> Use this photo </button>
                        <button type="submit" class="btn btn-danger btn-block" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Discard this photo </button>
                    </form>
                </div>

            </div>

        </div>
    </div>

    <!-- Camera's view-->
    @*<div id="camera-area" class="row">
        <img src="~/Images/MockPhotos/camera_view.jpg" style="min-width:100%; max-height:100%" />
    </div>*@


    <div class="camera" id="camera-area">
        <video id="video">Video stream not available.</video>
        @*<button id="startbutton">Take photo</button>*@
    </div>
    <canvas id="canvas"></canvas>



    <div class="row">
        @*<button id="takePhotoBtn" class="col-md-offset-2 col-md-3 btn-success "><span class="glyphicon glyphicon-camera"></span> Take Photo</button>*@
        <button id="startbutton" class="col-md-offset-2 col-md-3 btn-success "><span class="glyphicon glyphicon-camera"></span> Take Photo</button>
        <button id="savePhotoBtn" class="col-md-3 btn btn-lg">Save</button>
        <button id="cancelPhotoBtn" class="col-md-3 btn btn-danger btn-lg">Cancel</button>
    </div>
</div>



<script>
    $(document).ready(function () {


        //$("#takePhotoBtn").click(function (e) {
        //    e.preventDefault();
        //    $("#confirmPhotoModal").modal();
        //});

        $("#savePhotoBtn").click(function (e) {
            e.preventDefault();
            window.location.href = '/MockPhoto/ManagePhotos';
        });

        $("#cancelPhotoBtn").click(function (e) {
            e.preventDefault();
            window.location.href = '/MockPhoto/ManagePhotos';
        });

        // Stuff related to photo capture


        var width = 320;    // We will scale the photo width to this
        var height = 0;     // This will be computed based on the input stream

        // |streaming| indicates whether or not we're currently streaming
        // video from the camera. Obviously, we start at false.

        var streaming = false;


        // The various HTML elements we need to configure or control. These
        // will be set by the startup() function.

        var video = null;
        var canvas = null;
        var photo = null;
        var startbutton = null;

        function startup() {
            video = document.getElementById('video');
            canvas = document.getElementById('canvas');
            photo = document.getElementById('photo');
            startbutton = document.getElementById('startbutton');

            navigator.getMedia = (navigator.getUserMedia ||
                                   navigator.webkitGetUserMedia ||
                                   navigator.mozGetUserMedia ||
                                   navigator.msGetUserMedia);

            navigator.getMedia(
              {
                  video: true,
                  audio: false
              },
              function (stream) {
                  if (navigator.mozGetUserMedia) {
                      video.mozSrcObject = stream;
                  } else {
                      var vendorURL = window.URL || window.webkitURL;
                      video.src = vendorURL.createObjectURL(stream);
                  }
                  video.play();
              },
              function (err) {
                  console.log("An error occured! " + err);
              }
            );

            video.addEventListener('canplay', function (ev) {
                if (!streaming) {
                    height = video.videoHeight / (video.videoWidth / width);

                    // Firefox currently has a bug where the height can't be read from
                    // the video, so we will make assumptions if this happens.

                    if (isNaN(height)) {
                        height = width / (4 / 3);
                    }

                    video.setAttribute('width', width);
                    video.setAttribute('height', height);
                    canvas.setAttribute('width', width);
                    canvas.setAttribute('height', height);
                    streaming = true;
                }
            }, false);

            startbutton.addEventListener('click', function (ev) {
                takepicture();
                ev.preventDefault();
                $("#confirmPhotoModal").modal();
            }, false);

            clearphoto();
        }

        // Fill the photo with an indication that none has been
        // captured.

        function clearphoto() {
            var context = canvas.getContext('2d');
            context.fillStyle = "#AAA";
            context.fillRect(0, 0, canvas.width, canvas.height);

            var data = canvas.toDataURL('image/png');
            photo.setAttribute('src', data);
        }

        // Capture a photo by fetching the current contents of the video
        // and drawing it into a canvas, then converting that to a PNG
        // format data URL. By drawing it on an offscreen canvas and then
        // drawing that to the screen, we can change its size and/or apply
        // other changes before drawing it.

        function takepicture() {
            var context = canvas.getContext('2d');
            if (width && height) {
                canvas.width = width;
                canvas.height = height;
                context.drawImage(video, 0, 0, width, height);

                var data = canvas.toDataURL('image/png');
                photo.setAttribute('src', data);
            } else {
                clearphoto();
            }
        }

        // Set up our event listener to run the startup process
        // once loading is complete.
        window.addEventListener('load', startup, false);


    });






</script>